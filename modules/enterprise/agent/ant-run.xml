<?xml version="1.0" encoding="UTF-8"?>

<!--
=======================================================================
Ant Script that provides ways to package the Agent.
=======================================================================
-->

<project name="rhqagent" default="package-dist" basedir=".">

   <!-- in case these weren't passed in (i.e. not invoked via maven), assume some defaults -->
   <property name="settings.localRepository" location="${user.home}/.m2/repository"/>
   <property name="project.version" value="2.0.0-SNAPSHOT"/>
   <property name="sigar.version" value="1.6.5.132-6"/>
   <property name="augeas.version" value="0.9.0-4"/>
   <property name="augeas.classifier" value="el5"/>
   <property name="augeas.zip.location" value="${settings.localRepository}/net/augeas/augeas-native/${augeas.version}/"/>
   <property name="augeas.zip.mask" value="*-${augeas.classifier}.zip"/>
   <property name="augeas.zip.version" value="0.9.0-4"/>
   <property name="getopt.version" value="1.0.13"/>
   <property name="jaxb-api.version" value="2.1"/>
   <property name="jaxb-impl.version" value="2.1"/>
   <property name="log4j.version" value="1.2.16"/>
   <property name="trove.version" value="3.0.3"/>
   <property name="so.exts" value="*.so.*"/>
   <property name="picketbox.version" value="4.0.19.SP7"/>

   <!--
   =======================================================================
   Contains some path elements needed to run
   =======================================================================
   -->
   <path id="run.classpath">

      <!-- include our own thirdparty libraries -->

      <!-- WARNING! IF YOU ADD A LIBRARY TO THE AGENT, MAKE SURE YOU ADD
           THEM (IF APPROPRIATE) TO THE EXCLUDED CLASSES LIST OF THE RootPluginClassLoader's
           REGULAR EXPRESSION (rhq.agent.plugins.root-plugin-classloader-regex).
           SEE AgentConfiguration.getPluginContainerConfiguration() -->

      <fileset dir="${settings.localRepository}" id="run.classpath.fileset">
         <include name="javax/persistence/persistence-api/1.0/persistence-api-1.0.jar" />
         <include name="i18nlog/i18nlog/1.0.10/i18nlog-1.0.10.jar" />
         <include name="log4j/log4j/${log4j.version}/log4j-${log4j.version}.jar" />
         <include name="jline/jline/${jline.version}/jline-${jline.version}.jar" />
         <include name="commons-logging/commons-logging/1.1.0.jboss/commons-logging-1.1.0.jboss.jar" />
         <include name="gnu/getopt/java-getopt/${getopt.version}/java-getopt-${getopt.version}.jar" />
         <include name="commons-httpclient/commons-httpclient/2.0.2/commons-httpclient-2.0.2.jar" />
         <include name="dom4j/dom4j/1.6/dom4j-1.6.jar" />
         <include name="oswego-concurrent/concurrent/${concurrent.version}/concurrent-${concurrent.version}.jar" />
         <include name="org/jboss/jboss-common-core/${jboss-common-core.version}/jboss-common-core-${jboss-common-core.version}.jar" />
         <include name="jboss/jboss-jmx/${jboss-jmx.version}/jboss-jmx-${jboss-jmx.version}.jar" />
         <include name="org/jboss/remoting/jboss-remoting/${jboss-remoting.version}/jboss-remoting-${jboss-remoting.version}.jar" />
         <include name="org/jboss/logging/jboss-logging/${jboss-logging.version}/jboss-logging-${jboss-logging.version}.jar" />
         <include name="jboss/jboss-serialization/${jboss-serialization.version}/jboss-serialization-${jboss-serialization.version}.jar" />
         <include name="org/rhq/rhq-enterprise-comm/${project.version}/rhq-enterprise-comm-${project.version}.jar" />
         <include name="org/rhq/rhq-enterprise-agent/${project.version}/rhq-enterprise-agent-${project.version}.jar" />
         <include name="org/rhq/rhq-core-util/${project.version}/rhq-core-util-${project.version}.jar" />
         <include name="org/rhq/rhq-core-comm-api/${project.version}/rhq-core-comm-api-${project.version}.jar" />
         <include name="org/rhq/rhq-core-native-system/${project.version}/rhq-core-native-system-${project.version}.jar" />
         <include name="org/rhq/rhq-core-domain/${project.version}/rhq-core-domain-${project.version}.jar" />
         <include name="org/rhq/rhq-core-plugin-api/${project.version}/rhq-core-plugin-api-${project.version}.jar" />
         <include name="org/rhq/rhq-core-plugin-container/${project.version}/rhq-core-plugin-container-${project.version}.jar" />
         <include name="org/rhq/rhq-core-client-api/${project.version}/rhq-core-client-api-${project.version}.jar" />
         <include name="org/rhq/rhq-common-drift/${project.version}/rhq-common-drift-${project.version}.jar"/>
         <include name="commons-io/commons-io/1.4/commons-io-1.4.jar"/>
         <include name="net/sf/trove4j/trove4j/${trove.version}/trove4j-${trove.version}.jar"/>
         <include name="org/picketbox/picketbox/${picketbox.version}/picketbox-${picketbox.version}.jar" />
      </fileset>

   </path>

   <path id="endorsed.classpath">

      <!-- The JAXB jars need to go in endorsed, since we use JAXB 2.1, which would cause conflicts with
           JAXB 2.0, which is bundled with Java 6, when running under Java 6. JAXB 2.1 depends on
           Activation 1.1, which we also need to include, in order to remain compatible with Java 5,
           which bundles Activation 1.0. -->
      <fileset dir="${settings.localRepository}" id="endorsed.classpath.fileset">
         <include name="javax/xml/bind/jaxb-api/${jaxb-api.version}/jaxb-api-${jaxb-api.version}.jar"/>
         <include name="com/sun/xml/bind/jaxb-impl/${jaxb-impl.version}/jaxb-impl-${jaxb-impl.version}.jar"/>
         <include name="javax/activation/activation/1.1/activation-1.1.jar"/>
      </fileset>

   </path>

   <fileset dir="${settings.localRepository}" id="native.fileset">
      <include name="org/hyperic/sigar-dist/${sigar.version}/sigar-dist-${sigar.version}.zip" />
   </fileset>

   <fileset dir="${augeas.zip.location}" id="augeas.native.fileset">
	  <include name="${augeas.zip.mask}" />
   </fileset>

   <fileset dir="${settings.localRepository}" id="plugins.fileset">
      <!-- let's not include any plugins in the distro - let the agent download them from the server -->
      <exclude name="**/*"/>

      <!--
      <include name="org/rhq/rhq-agent-plugin/${project.version}/rhq-agent-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-platform-plugin/${project.version}/rhq-platform-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-jmx-plugin/${project.version}/rhq-jmx-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-apache-plugin/${project.version}/rhq-apache-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-jbossas-plugin/${project.version}/rhq-jbossas-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-tomcat-plugin/${project.version}/rhq-tomcat-plugin-${project.version}.jar"/>
      <include name="org/rhq/rhq-hibernate-plugin/${project.version}/rhq-hibernate-plugin-${project.version}.jar"/>
      -->
   </fileset>

   <!--
   =======================================================================
   -->
   <target name="package-dist">
      <echo>Running ant package-dist</echo>
      <!-- do not put our distro in a directory with a specific version in the name! -->
      <property name="agent.distro.dir" location="${basedir}/target/rhq-agent"/>

      <!-- Don't want to delete every time <delete dir="${agent.distro.dir}" />-->

      <copy todir="${agent.distro.dir}/lib"
            flatten="true">
         <fileset refid="run.classpath.fileset" />
      </copy>

      <copy todir="${agent.distro.dir}/lib/endorsed"
            flatten="true">
         <fileset refid="endorsed.classpath.fileset" />
      </copy>

      <unzip dest="${agent.distro.dir}/lib" overwrite="false">
         <fileset refid="native.fileset" />
         <patternset>
            <include name="**/lib/sigar.jar"/>
            <include name="**/lib/bcel*.jar"/>
            <include name="**/lib/*.so"/>
            <include name="**/lib/${so.exts}"/>
            <include name="**/lib/*.sl"/>
            <include name="**/lib/*.dll"/>
            <include name="**/lib/*.dylib"/>
         </patternset>
      </unzip>

    <unzip dest="${agent.distro.dir}/lib" overwrite="false">
       <fileset refid="augeas.native.fileset" />
       <patternset>
          <include name="**/lib*/*.so"/>
          <include name="**/lib*/${so.exts}"/>
       </patternset>
    </unzip>

     <move todir="${agent.distro.dir}/lib/augeas/lib" flatten="true" overwrite="false">
       <fileset dir="${agent.distro.dir}/lib/augeas-native-${augeas.zip.version}/lib">
          <include name="*.so" />
       	  <include name="${so.exts}" />
       </fileset>
     </move>

    <move todir="${agent.distro.dir}/lib/augeas/lib64" flatten="true" overwrite="false">
      <fileset dir="${agent.distro.dir}/lib/augeas-native-${augeas.zip.version}/lib64">
         <include name="*.so" />
         <include name="${so.exts}" />
      </fileset>
    </move>

    <delete failonerror="false" includeEmptyDirs="true" verbose="true">
        <fileset dir="${agent.distro.dir}/lib" includes="augeas-native-*/"/>
    </delete>

    <move todir="${agent.distro.dir}/lib" flatten="true" overwrite="false">
       <fileset dir="${agent.distro.dir}/lib">
          <include name="**/lib/*" />
          <exclude name="**/augeas/*/*"/>
       </fileset>
    </move>
    <move file="${agent.distro.dir}/lib/sigar.jar" tofile="${agent.distro.dir}/lib/sigar-${sigar.version}.jar"
          overwrite="false"/>
    <delete failonerror="false" includeEmptyDirs="true" verbose="true">
        <fileset dir="${agent.distro.dir}/lib" includes="hyperic-sigar-*/"/>
    </delete>
    <chmod dir="${agent.distro.dir}/lib" perm="ug+rx" includes="*.so,${so.exts},*.sl,*.dylib"/>
    <chmod dir="${agent.distro.dir}/lib/augeas/lib" perm="ug+rx" includes="*.so,${so.exts}"/>
    <chmod dir="${agent.distro.dir}/lib/augeas/lib64" perm="ug+rx" includes="*.so,${so.exts}"/>

    <copy todir="${agent.distro.dir}/bin">
       <fileset dir="${basedir}/src/etc"
                includes="*.bat,*.sh"/>
    </copy>
    <chmod dir="${agent.distro.dir}/bin" perm="ug+rx" includes="*.sh"/>

    <copy todir="${agent.distro.dir}/bin/wrapper">
       <fileset dir="${basedir}/src/etc/java-service-wrapper"
                includes="rhq-agent-wrapper.*"/>
    </copy>

    <copy todir="${agent.distro.dir}/bin/wrapper/windows-x86_32">
       <fileset dir="${basedir}/src/etc/java-service-wrapper/windows-x86_32" />
    </copy>

    <copy todir="${agent.distro.dir}/bin/wrapper/windows-x86_64">
       <fileset dir="${basedir}/src/etc/java-service-wrapper/windows-x86_64" />
    </copy>

   	<copy todir="${agent.distro.dir}/plugins" flatten="true" overwrite="true">
       <fileset refid="plugins.fileset"/>
    </copy>
    <!--
    Put the configuration files here to override those in the jar.
    The agent jar has these configs in it, too, just in case the
    agent is run in an environment that does not have a conf
    directory or these files in its conf dir (as is the case for
    some tests).  The agent will have this conf directory as the
    first thing in its classpath so the conf files can override
    those in the agent jar.
    -->
    <copy todir="${agent.distro.dir}/conf">
       <fileset dir="${basedir}/src/main/resources">
          <include name="agent-configuration.xml"/>
          <include name="log4j.xml"/>
       </fileset>
    </copy>

    <delete file="${basedir}/target/rhq-enterprise-agent-${project.version}.zip" />
    <zip destfile="${basedir}/target/rhq-enterprise-agent-${project.version}.zip" >
      <!-- The zip task does not mantain file permissions, we have to make sure they are set here -->
       <zipfileset dir="${basedir}/target" filemode="644" dirmode="755">
          <include name="rhq-agent/**"/>
          <exclude name="rhq-agent/bin/*.sh"/>
          <exclude name="rhq-agent/lib/*.so"/>
          <exclude name="rhq-agent/lib/${so.exts}"/>
          <exclude name="rhq-agent/lib/*.sl"/>
          <exclude name="rhq-agent/lib/*.dylib"/>
          <exclude name="rhq-agent/lib/augeas/**" />
          <exclude name="rhq-agent/conf/agent-configuration.xml" />
       </zipfileset>
       <zipfileset dir="${basedir}/target" filemode="755" dirmode="755">
          <include name="rhq-agent/bin/*.sh"/>
          <include name="rhq-agent/lib/*.so"/>
          <include name="rhq-agent/lib/${so.exts}"/>
          <include name="rhq-agent/lib/*.sl"/>
          <include name="rhq-agent/lib/*.dylib"/>
          <include name="rhq-agent/lib/augeas/lib/*.so"/>
          <include name="rhq-agent/lib/augeas/lib/${so.exts}"/>
          <include name="rhq-agent/lib/augeas/lib64/*.so"/>
          <include name="rhq-agent/lib/augeas/lib64/${so.exts}"/>
       </zipfileset>
       <!-- Modifying the configuration permissions during assembly -->
       <zipfileset dir="${basedir}/target" filemode="640" dirmode="755">
          <include name="rhq-agent/conf/agent-configuration.xml" />
       </zipfileset>
    </zip>

    <mkdir dir="${settings.localRepository}/org/rhq/rhq-enterprise-agent/${project.version}"/>
    <copy file="${basedir}/target/rhq-enterprise-agent-${project.version}.zip"
          tofile="${settings.localRepository}/org/rhq/rhq-enterprise-agent/${project.version}/rhq-enterprise-agent-${project.version}.zip"
          verbose="true"/>

   </target>

</project>

